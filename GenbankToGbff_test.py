import unittest
import os
import GenbankToGbff as Gb

"""This test suite ensures that methods in GbToGbff are generating the correct types of data structures,
sorting the records correctly by length of the sequences in those records and writing the gbff file
as expected."""


class TestGenbankToGbff(unittest.TestCase):
    # following variables are set up using a benchmarking dataset used for testing purpose to compare with
    # data generated by GbToGbff module
    org_name = str('pa01test')
    input_path = str('./input_gb_files')
    output_path = str('./input_gb_files')
    pa01test = Gb.GbToGbff(org_name, input_path, output_path)
    file_list = []
    seq_dict = {}

    # test to check that expected number of files are added to list
    def test_findGbFiles1(self):
        self.pa01test.find_gb_files()
        file_list = self.pa01test.file_list
        self.assertEqual(len(file_list), 3)

    # test to check that the function is creating list type object
    def test_findGbFiles2(self):
        self.pa01test.find_gb_files()
        file_list = self.pa01test.file_list
        self.assertIs(type(file_list), list)

    # test to check that dictionary of seq records has expected number of records
    def test_readGbFiles1(self):
        self.pa01test.read_gb_files()
        seq_dict = self.pa01test.seq_recs
        self.assertEqual(len(seq_dict), 3)

    # test to check that dictionary of seq records is sorted on decreasing sequence length
    def test_readGbFiles2(self):
        message = "Dictionary is not correctly sorted"
        seqlen = []
        self.pa01test.read_gb_files()
        seq_dict = self.pa01test.seq_recs
        for rec in seq_dict.values():
            seqlen.append(len(rec.seq))
        for item in range(len(seqlen)-1):
            self.assertGreater(seqlen[item], seqlen[item+1], message)

    # test to check that gbff was generated as expected
    def test_writeGbff(self):
        self.pa01test.write_gbff()
        gbff_status = os.path.exists(self.pa01test.outfile_path)
        self.assertEqual(gbff_status, True)


if __name__ == '__main__':
    unittest.main()
